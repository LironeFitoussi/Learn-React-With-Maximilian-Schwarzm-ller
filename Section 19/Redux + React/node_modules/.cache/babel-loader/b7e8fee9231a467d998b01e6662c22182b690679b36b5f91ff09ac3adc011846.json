{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// export const INCREMENT = \"increment\"\n// export const DECREMENT = \"decrement\"\n// export const INCREASE = \"increase\"\n// export const TOGGLE = \"TOGGLE\"\n\n// const counterReducer = ( state = initialState,  action ) => {\n//   switch (action.type) {\n//     case INCREMENT:\n//       return { ...state, counter: state.counter + 1 };\n//     case DECREMENT:\n//       return { ...state, counter: state.counter - 1 };\n//     case INCREASE:\n//       return { ...state, counter: state.counter + action.amount };\n//     case TOGGLE:\n//       return { ...state, showCounter: !state.showCounter };\n//     default:\n//       return state;\n//   }\n// };\n\n// const store = createStore(counterReducer);\n\nconst store = createStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggle","store","reducer"],"sources":["C:/Develop/Learn-React-With-Maximilian-Schwarzm-ller/Section 19/Redux + React/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n name: \"counter\",\r\n initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter += action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n})\r\n\r\n// export const INCREMENT = \"increment\"\r\n// export const DECREMENT = \"decrement\"\r\n// export const INCREASE = \"increase\"\r\n// export const TOGGLE = \"TOGGLE\"\r\n\r\n// const counterReducer = ( state = initialState,  action ) => {\r\n//   switch (action.type) {\r\n//     case INCREMENT:\r\n//       return { ...state, counter: state.counter + 1 };\r\n//     case DECREMENT:\r\n//       return { ...state, counter: state.counter - 1 };\r\n//     case INCREASE:\r\n//       return { ...state, counter: state.counter + action.amount };\r\n//     case TOGGLE:\r\n//       return { ...state, showCounter: !state.showCounter };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\nconst store = createStore(counterSlice.reducer);\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACXK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,IAAIS,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMW,KAAK,GAAGf,WAAW,CAACK,YAAY,CAACW,OAAO,CAAC;AAC/C,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}