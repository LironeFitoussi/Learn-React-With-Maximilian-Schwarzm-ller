{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport const INCREMENT = \"increment\";\nexport const DECREMENT = \"decrement\";\nexport const INCREASE = \"increase\";\nexport const TOGGLE = \"TOGGLE\";\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    case INCREASE:\n      return {\n        ...state,\n        counter: state.counter + action.amount\n      };\n    case TOGGLE:\n      return {\n        ...state,\n        showCounter: !state.showCounter\n      };\n    default:\n      return state;\n  }\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","payload","toggle","INCREMENT","DECREMENT","INCREASE","TOGGLE","counterReducer","type","amount","store"],"sources":["C:/Develop/Learn-React-With-Maximilian-Schwarzm-ller/Section 19/Redux + React/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\ncreateSlice({\r\n name: \"counter\",\r\n initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter += action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n})\r\n\r\nexport const INCREMENT = \"increment\"\r\nexport const DECREMENT = \"decrement\"\r\nexport const INCREASE = \"increase\"\r\nexport const TOGGLE = \"TOGGLE\"\r\n\r\nconst counterReducer = ( state = initialState,  action ) => {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return { ...state, counter: state.counter + 1 };\r\n    case DECREMENT:\r\n      return { ...state, counter: state.counter - 1 };\r\n    case INCREASE:\r\n      return { ...state, counter: state.counter + action.amount };\r\n    case TOGGLE:\r\n      return { ...state, showCounter: !state.showCounter };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACXI,IAAI,EAAE,SAAS;EACfH,YAAY;EACXI,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACL,OAAO,IAAIQ,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACJ,WAAW,GAAG,CAACI,KAAK,CAACJ,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMU,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAE9B,MAAMC,cAAc,GAAGA,CAAEV,KAAK,GAAGN,YAAY,EAAGS,MAAM,KAAM;EAC1D,QAAQA,MAAM,CAACQ,IAAI;IACjB,KAAKL,SAAS;MACZ,OAAO;QAAE,GAAGN,KAAK;QAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG;MAAE,CAAC;IACjD,KAAKY,SAAS;MACZ,OAAO;QAAE,GAAGP,KAAK;QAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG;MAAE,CAAC;IACjD,KAAKa,QAAQ;MACX,OAAO;QAAE,GAAGR,KAAK;QAAEL,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACS;MAAO,CAAC;IAC7D,KAAKH,MAAM;MACT,OAAO;QAAE,GAAGT,KAAK;QAAEJ,WAAW,EAAE,CAACI,KAAK,CAACJ;MAAY,CAAC;IACtD;MACE,OAAOI,KAAK;EAChB;AACF,CAAC;AAED,MAAMa,KAAK,GAAGrB,WAAW,CAACkB,cAAc,CAAC;AAEzC,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}